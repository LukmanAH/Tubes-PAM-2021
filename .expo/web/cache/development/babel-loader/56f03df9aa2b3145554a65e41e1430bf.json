{"ast":null,"code":"import { Bezier } from \"./Bezier\";\n\nvar linear = function () {\n  var _f = function _f(t) {\n    return t;\n  };\n\n  _f._closure = {};\n  _f.asString = \"function linear(t){return t;}\";\n  _f.__workletHash = 7988822508142;\n\n  global.__reanimatedWorkletInit(_f);\n\n  return _f;\n}();\n\nvar ease = function () {\n  var _f = function _f(t) {\n    return Bezier(0.42, 0, 1, 1)(t);\n  };\n\n  _f._closure = {\n    Bezier: Bezier\n  };\n  _f.asString = \"function ease(t){const{Bezier}=jsThis._closure;{return Bezier(0.42,0,1,1)(t);}}\";\n  _f.__workletHash = 13039945852153;\n\n  global.__reanimatedWorkletInit(_f);\n\n  return _f;\n}();\n\nvar quad = function () {\n  var _f = function _f(t) {\n    return t * t;\n  };\n\n  _f._closure = {};\n  _f.asString = \"function quad(t){return t*t;}\";\n  _f.__workletHash = 8628631460172;\n\n  global.__reanimatedWorkletInit(_f);\n\n  return _f;\n}();\n\nvar cubic = function () {\n  var _f = function _f(t) {\n    return t * t * t;\n  };\n\n  _f._closure = {};\n  _f.asString = \"function cubic(t){return t*t*t;}\";\n  _f.__workletHash = 9374441307661;\n\n  global.__reanimatedWorkletInit(_f);\n\n  return _f;\n}();\n\nvar poly = function () {\n  var _f = function _f(n) {\n    return function (t) {\n      return Math.pow(t, n);\n    };\n  };\n\n  _f._closure = {};\n  _f.asString = \"function poly(n){return function(t){return Math.pow(t,n);};}\";\n  _f.__workletHash = 8669070629046;\n\n  global.__reanimatedWorkletInit(_f);\n\n  return _f;\n}();\n\nvar sin = function () {\n  var _f = function _f(t) {\n    return 1 - Math.cos(t * Math.PI / 2);\n  };\n\n  _f._closure = {};\n  _f.asString = \"function sin(t){return 1-Math.cos(t*Math.PI/2);}\";\n  _f.__workletHash = 8621899987563;\n\n  global.__reanimatedWorkletInit(_f);\n\n  return _f;\n}();\n\nvar circle = function () {\n  var _f = function _f(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  };\n\n  _f._closure = {};\n  _f.asString = \"function circle(t){return 1-Math.sqrt(1-t*t);}\";\n  _f.__workletHash = 15893365817828;\n\n  global.__reanimatedWorkletInit(_f);\n\n  return _f;\n}();\n\nvar exp = function () {\n  var _f = function _f(t) {\n    return Math.pow(2, 10 * (t - 1));\n  };\n\n  _f._closure = {};\n  _f.asString = \"function exp(t){return Math.pow(2,10*(t-1));}\";\n  _f.__workletHash = 15907471981377;\n\n  global.__reanimatedWorkletInit(_f);\n\n  return _f;\n}();\n\nvar elastic = function () {\n  var _f = function _f() {\n    var bounciness = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    var p = bounciness * Math.PI;\n    return function () {\n      var _f = function _f(t) {\n        return 1 - Math.pow(Math.cos(t * Math.PI / 2), 3) * Math.cos(t * p);\n      };\n\n      _f._closure = {\n        p: p\n      };\n      _f.asString = \"function _f(t){const{p}=jsThis._closure;{return 1-Math.pow(Math.cos(t*Math.PI/2),3)*Math.cos(t*p);}}\";\n      _f.__workletHash = 8897284077766;\n\n      global.__reanimatedWorkletInit(_f);\n\n      return _f;\n    }();\n  };\n\n  _f._closure = {};\n  _f.asString = \"function elastic(){var bounciness=arguments.length>0&&arguments[0]!==undefined?arguments[0]:1;var p=bounciness*Math.PI;return function(){var _f=function _f(t){return 1-Math.pow(Math.cos(t*Math.PI/2),3)*Math.cos(t*p);};_f._closure={p:p};_f.asString=\\\"function _f(t){const{p}=jsThis._closure;{return 1-Math.pow(Math.cos(t*Math.PI/2),3)*Math.cos(t*p);}}\\\";_f.__workletHash=8897284077766;global.__reanimatedWorkletInit(_f);return _f;}();}\";\n  _f.__workletHash = 13925078965367;\n\n  global.__reanimatedWorkletInit(_f);\n\n  return _f;\n}();\n\nvar back = function () {\n  var _f = function _f() {\n    var s = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1.70158;\n    return function (t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  };\n\n  _f._closure = {};\n  _f.asString = \"function back(){var s=arguments.length>0&&arguments[0]!==undefined?arguments[0]:1.70158;return function(t){return t*t*((s+1)*t-s);};}\";\n  _f.__workletHash = 3185133767591;\n\n  global.__reanimatedWorkletInit(_f);\n\n  return _f;\n}();\n\nvar bounce = function () {\n  var _f = function _f(t) {\n    if (t < 1 / 2.75) {\n      return 7.5625 * t * t;\n    }\n\n    if (t < 2 / 2.75) {\n      var _t = t - 1.5 / 2.75;\n\n      return 7.5625 * _t * _t + 0.75;\n    }\n\n    if (t < 2.5 / 2.75) {\n      var _t2 = t - 2.25 / 2.75;\n\n      return 7.5625 * _t2 * _t2 + 0.9375;\n    }\n\n    var t2 = t - 2.625 / 2.75;\n    return 7.5625 * t2 * t2 + 0.984375;\n  };\n\n  _f._closure = {};\n  _f.asString = \"function bounce(t){if(t<1/2.75){return 7.5625*t*t;}if(t<2/2.75){var _t=t-1.5/2.75;return 7.5625*_t*_t+0.75;}if(t<2.5/2.75){var _t2=t-2.25/2.75;return 7.5625*_t2*_t2+0.9375;}var t2=t-2.625/2.75;return 7.5625*t2*t2+0.984375;}\";\n  _f.__workletHash = 12239512606821;\n\n  global.__reanimatedWorkletInit(_f);\n\n  return _f;\n}();\n\nvar bezier = function () {\n  var _f = function _f(x1, y1, x2, y2) {\n    return Bezier(x1, y1, x2, y2);\n  };\n\n  _f._closure = {\n    Bezier: Bezier\n  };\n  _f.asString = \"function bezier(x1,y1,x2,y2){const{Bezier}=jsThis._closure;{return Bezier(x1,y1,x2,y2);}}\";\n  _f.__workletHash = 17502368919373;\n\n  global.__reanimatedWorkletInit(_f);\n\n  return _f;\n}();\n\nvar in_ = function () {\n  var _f = function _f(easing) {\n    return easing;\n  };\n\n  _f._closure = {};\n  _f.asString = \"function in_(easing){return easing;}\";\n  _f.__workletHash = 1837493474379;\n\n  global.__reanimatedWorkletInit(_f);\n\n  return _f;\n}();\n\nvar out = function () {\n  var _f = function _f(easing) {\n    return function () {\n      var _f = function _f(t) {\n        return 1 - easing(1 - t);\n      };\n\n      _f._closure = {\n        easing: easing\n      };\n      _f.asString = \"function _f(t){const{easing}=jsThis._closure;{return 1-easing(1-t);}}\";\n      _f.__workletHash = 5726884014519;\n\n      global.__reanimatedWorkletInit(_f);\n\n      return _f;\n    }();\n  };\n\n  _f._closure = {};\n  _f.asString = \"function out(easing){return function(){var _f=function _f(t){return 1-easing(1-t);};_f._closure={easing:easing};_f.asString=\\\"function _f(t){const{easing}=jsThis._closure;{return 1-easing(1-t);}}\\\";_f.__workletHash=5726884014519;global.__reanimatedWorkletInit(_f);return _f;}();}\";\n  _f.__workletHash = 13521524228015;\n\n  global.__reanimatedWorkletInit(_f);\n\n  return _f;\n}();\n\nvar inOut = function () {\n  var _f = function _f(easing) {\n    return function () {\n      var _f = function _f(t) {\n        if (t < 0.5) {\n          return easing(t * 2) / 2;\n        }\n\n        return 1 - easing((1 - t) * 2) / 2;\n      };\n\n      _f._closure = {\n        easing: easing\n      };\n      _f.asString = \"function _f(t){const{easing}=jsThis._closure;{if(t<0.5){return easing(t*2)/2;}return 1-easing((1-t)*2)/2;}}\";\n      _f.__workletHash = 2325007799982;\n\n      global.__reanimatedWorkletInit(_f);\n\n      return _f;\n    }();\n  };\n\n  _f._closure = {};\n  _f.asString = \"function inOut(easing){return function(){var _f=function _f(t){if(t<0.5){return easing(t*2)/2;}return 1-easing((1-t)*2)/2;};_f._closure={easing:easing};_f.asString=\\\"function _f(t){const{easing}=jsThis._closure;{if(t<0.5){return easing(t*2)/2;}return 1-easing((1-t)*2)/2;}}\\\";_f.__workletHash=2325007799982;global.__reanimatedWorkletInit(_f);return _f;}();}\";\n  _f.__workletHash = 15313800395911;\n\n  global.__reanimatedWorkletInit(_f);\n\n  return _f;\n}();\n\nexport var Easing = {\n  linear: linear,\n  ease: ease,\n  quad: quad,\n  cubic: cubic,\n  poly: poly,\n  sin: sin,\n  circle: circle,\n  exp: exp,\n  elastic: elastic,\n  back: back,\n  bounce: bounce,\n  bezier: bezier,\n  in: in_,\n  out: out,\n  inOut: inOut\n};","map":{"version":3,"sources":["C:/Users/PC NOOB/Downloads/fixlast/Tubes-PAM-2021-React-Native/node_modules/react-native-reanimated/src/reanimated2/Easing.js"],"names":["Bezier","linear","t","ease","quad","cubic","poly","n","Math","pow","sin","cos","PI","circle","sqrt","exp","elastic","bounciness","p","back","s","bounce","t2","bezier","x1","y1","x2","y2","in_","easing","out","inOut","Easing","in"],"mappings":"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","sourcesContent":["import { Bezier } from './Bezier';\r\n\r\n/**\r\n * The `Easing` module implements common easing functions. This module is used\r\n * by [Animate.timing()](docs/animate.html#timing) to convey physically\r\n * believable motion in animations.\r\n *\r\n * You can find a visualization of some common easing functions at\r\n * http://easings.net/\r\n *\r\n * ### Predefined animations\r\n *\r\n * The `Easing` module provides several predefined animations through the\r\n * following methods:\r\n *\r\n * - [`back`](docs/easing.html#back) provides a simple animation where the\r\n *   object goes slightly back before moving forward\r\n * - [`bounce`](docs/easing.html#bounce) provides a bouncing animation\r\n * - [`ease`](docs/easing.html#ease) provides a simple inertial animation\r\n * - [`elastic`](docs/easing.html#elastic) provides a simple spring interaction\r\n *\r\n * ### Standard functions\r\n *\r\n * Three standard easing functions are provided:\r\n *\r\n * - [`linear`](docs/easing.html#linear)\r\n * - [`quad`](docs/easing.html#quad)\r\n * - [`cubic`](docs/easing.html#cubic)\r\n *\r\n * The [`poly`](docs/easing.html#poly) function can be used to implement\r\n * quartic, quintic, and other higher power functions.\r\n *\r\n * ### Additional functions\r\n *\r\n * Additional mathematical functions are provided by the following methods:\r\n *\r\n * - [`bezier`](docs/easing.html#bezier) provides a cubic bezier curve\r\n * - [`circle`](docs/easing.html#circle) provides a circular function\r\n * - [`sin`](docs/easing.html#sin) provides a sinusoidal function\r\n * - [`exp`](docs/easing.html#exp) provides an exponential function\r\n *\r\n * The following helpers are used to modify other easing functions.\r\n *\r\n * - [`in`](docs/easing.html#in) runs an easing function forwards\r\n * - [`inOut`](docs/easing.html#inout) makes any easing function symmetrical\r\n * - [`out`](docs/easing.html#out) runs an easing function backwards\r\n */\r\n\r\n/**\r\n * A linear function, `f(t) = t`. Position correlates to elapsed time one to\r\n * one.\r\n *\r\n * http://cubic-bezier.com/#0,0,1,1\r\n */\r\nfunction linear(t) {\r\n  'worklet';\r\n  return t;\r\n}\r\n\r\n/**\r\n * A simple inertial interaction, similar to an object slowly accelerating to\r\n * speed.\r\n *\r\n * http://cubic-bezier.com/#.42,0,1,1\r\n */\r\nfunction ease(t) {\r\n  'worklet';\r\n  return Bezier(0.42, 0, 1, 1)(t);\r\n}\r\n\r\n/**\r\n * A quadratic function, `f(t) = t * t`. Position equals the square of elapsed\r\n * time.\r\n *\r\n * http://easings.net/#easeInQuad\r\n */\r\nfunction quad(t) {\r\n  'worklet';\r\n  return t * t;\r\n}\r\n\r\n/**\r\n * A cubic function, `f(t) = t * t * t`. Position equals the cube of elapsed\r\n * time.\r\n *\r\n * http://easings.net/#easeInCubic\r\n */\r\nfunction cubic(t) {\r\n  'worklet';\r\n  return t * t * t;\r\n}\r\n\r\n/**\r\n * A power function. Position is equal to the Nth power of elapsed time.\r\n *\r\n * n = 4: http://easings.net/#easeInQuart\r\n * n = 5: http://easings.net/#easeInQuint\r\n */\r\nfunction poly(n) {\r\n  'worklet';\r\n  return (t) => Math.pow(t, n);\r\n}\r\n\r\n/**\r\n * A sinusoidal function.\r\n *\r\n * http://easings.net/#easeInSine\r\n */\r\nfunction sin(t) {\r\n  'worklet';\r\n  return 1 - Math.cos((t * Math.PI) / 2);\r\n}\r\n\r\n/**\r\n * A circular function.\r\n *\r\n * http://easings.net/#easeInCirc\r\n */\r\nfunction circle(t) {\r\n  'worklet';\r\n  return 1 - Math.sqrt(1 - t * t);\r\n}\r\n\r\n/**\r\n * An exponential function.\r\n *\r\n * http://easings.net/#easeInExpo\r\n */\r\nfunction exp(t) {\r\n  'worklet';\r\n  return Math.pow(2, 10 * (t - 1));\r\n}\r\n\r\n/**\r\n * A simple elastic interaction, similar to a spring oscillating back and\r\n * forth.\r\n *\r\n * Default bounciness is 1, which overshoots a little bit once. 0 bounciness\r\n * doesn't overshoot at all, and bounciness of N > 1 will overshoot about N\r\n * times.\r\n *\r\n * http://easings.net/#easeInElastic\r\n */\r\nfunction elastic(bounciness = 1) {\r\n  'worklet';\r\n  const p = bounciness * Math.PI;\r\n  return (t) => {\r\n    'worklet';\r\n    return 1 - Math.pow(Math.cos((t * Math.PI) / 2), 3) * Math.cos(t * p);\r\n  };\r\n}\r\n\r\n/**\r\n * Use with `Animated.parallel()` to create a simple effect where the object\r\n * animates back slightly as the animation starts.\r\n *\r\n * Wolfram Plot:\r\n *\r\n * - http://tiny.cc/back_default (s = 1.70158, default)\r\n */\r\nfunction back(s = 1.70158) {\r\n  'worklet';\r\n  return (t) => t * t * ((s + 1) * t - s);\r\n}\r\n\r\n/**\r\n * Provides a simple bouncing effect.\r\n *\r\n * http://easings.net/#easeInBounce\r\n */\r\nfunction bounce(t) {\r\n  'worklet';\r\n  if (t < 1 / 2.75) {\r\n    return 7.5625 * t * t;\r\n  }\r\n\r\n  if (t < 2 / 2.75) {\r\n    const t2 = t - 1.5 / 2.75;\r\n    return 7.5625 * t2 * t2 + 0.75;\r\n  }\r\n\r\n  if (t < 2.5 / 2.75) {\r\n    const t2 = t - 2.25 / 2.75;\r\n    return 7.5625 * t2 * t2 + 0.9375;\r\n  }\r\n\r\n  const t2 = t - 2.625 / 2.75;\r\n  return 7.5625 * t2 * t2 + 0.984375;\r\n}\r\n\r\n/**\r\n * Provides a cubic bezier curve, equivalent to CSS Transitions'\r\n * `transition-timing-function`.\r\n *\r\n * A useful tool to visualize cubic bezier curves can be found at\r\n * http://cubic-bezier.com/\r\n */\r\nfunction bezier(x1, y1, x2, y2) {\r\n  'worklet';\r\n  return Bezier(x1, y1, x2, y2);\r\n}\r\n\r\n/**\r\n * Runs an easing function forwards.\r\n */\r\nfunction in_(easing) {\r\n  'worklet';\r\n  return easing;\r\n}\r\n\r\n/**\r\n * Runs an easing function backwards.\r\n */\r\nfunction out(easing) {\r\n  'worklet';\r\n  return (t) => {\r\n    'worklet';\r\n    return 1 - easing(1 - t);\r\n  };\r\n}\r\n\r\n/**\r\n * Makes any easing function symmetrical. The easing function will run\r\n * forwards for half of the duration, then backwards for the rest of the\r\n * duration.\r\n */\r\nfunction inOut(easing) {\r\n  'worklet';\r\n  return (t) => {\r\n    'worklet';\r\n    if (t < 0.5) {\r\n      return easing(t * 2) / 2;\r\n    }\r\n    return 1 - easing((1 - t) * 2) / 2;\r\n  };\r\n}\r\n\r\nexport const Easing = {\r\n  linear,\r\n  ease,\r\n  quad,\r\n  cubic,\r\n  poly,\r\n  sin,\r\n  circle,\r\n  exp,\r\n  elastic,\r\n  back,\r\n  bounce,\r\n  bezier,\r\n  in: in_,\r\n  out,\r\n  inOut,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}